version: '3'

services: 
  api:
    build: ./api
    container_name: 'api'
    volumes:
      - ./api:/code
      - static:/static  
      - media:/media 
    environment:
      - DJANGO_CONFIGURATION
    depends_on: 
      - postgres
      # - logstash
    env_file: ./.env
    networks:
      - nginx_network
      - db-network

  redis:
    image: "redis:alpine"
    restart: always
    networks:
        - nginx_network

  celery:
    build: ./api
    command: >
      bash -c "celery -A api worker -l info"
    volumes:
      - ./api:/code
      - media:/media 
    environment:
      - DJANGO_CONFIGURATION
    env_file: ./.env
    depends_on:
      - postgres
      - redis
    networks:
      - nginx_network

  celery-beat:
    build: ./api
    command: >
      bash -c "celery -A api beat -l info"
    volumes:
      - ./api:/code
    environment:
      - DJANGO_CONFIGURATION
    env_file: ./.env
    depends_on:
      - postgres
      - redis
    networks:
      - nginx_network

  postgres:
    image: postgres:11.4
    container_name: 'postgres'
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: ./.env
    restart: always
    networks:
      - db-network

  dbbackup:
    image: kartoza/pg-backup:9.6
    volumes:
      - ./backups:/backups
    links:
      - postgres:db
    env_file: ./.env



volumes:
  postgres_data:
  static:
  media:
  # 
      
networks:
  nginx_network:
    driver: bridge
  db-network:
    driver: bridge